Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    APPEND
    COMILLAS
    COMILLASSIMPLES
    CORCHETEDER
    CORCHETEIZQ
    DEF
    DIFERENTE
    DIVISIONENTERA
    DOSPUNTOS
    ELSE
    EQUALS
    EXPONENTE
    FOR
    IF
    IN
    INPUT
    IS
    LESSTHAN
    LLAVEDER
    LLAVEIZQ
    MAYORIGUAL
    MENORIGUAL
    MOD
    MORETHAN
    NOT
    NOTS
    OPEN
    OR
    PRINT
    PUNTO
    PUNTOCOMA
    RANGE
    REMOVE
    RETURN
    STRING
    SUBGUION
    WHILE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> comentario
Rule 3     cuerpo -> asignacion
Rule 4     expression -> expression PLUS term
Rule 5     expression -> expression MINUS term
Rule 6     expression -> term
Rule 7     term -> term TIMES factor
Rule 8     term -> term DIVIDE factor
Rule 9     term -> factor
Rule 10    factor -> NUMBER
Rule 11    factor -> CADENA
Rule 12    factor -> LPAREN expression RPAREN
Rule 13    comentario -> COMMENT
Rule 14    comentario -> COMMENTS
Rule 15    boolean -> TRUE
Rule 16    boolean -> FALSE
Rule 17    asignacion -> ID ASSIGN expression
Rule 18    asignacion -> multipleAsignacion expression
Rule 19    asignacion -> ID ASSIGN boolean
Rule 20    multipleAsignacion -> ID ASSIGN
Rule 21    multipleAsignacion -> ID ASSIGN multipleAsignacion
Rule 22    multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression

Terminals, with rules where they appear

(                    : 22
)                    : 22
*                    : 22
AND                  : 
APPEND               : 
ASSIGN               : 17 19 20 21 22 22
CADENA               : 11
COMA                 : 22
COMILLAS             : 
COMILLASSIMPLES      : 
COMMENT              : 13
COMMENTS             : 14
CORCHETEDER          : 
CORCHETEIZQ          : 
DEF                  : 
DIFERENTE            : 
DIVIDE               : 8
DIVISIONENTERA       : 
DOSPUNTOS            : 
ELSE                 : 
EQUALS               : 
EXPONENTE            : 
FALSE                : 16
FOR                  : 
ID                   : 17 19 20 21 22 22
IF                   : 
IN                   : 
INPUT                : 
IS                   : 
LESSTHAN             : 
LLAVEDER             : 
LLAVEIZQ             : 
LPAREN               : 12
MAYORIGUAL           : 
MENORIGUAL           : 
MINUS                : 5
MOD                  : 
MORETHAN             : 
NOT                  : 
NOTS                 : 
NUMBER               : 10
OPEN                 : 
OR                   : 
PLUS                 : 4
PRINT                : 
PUNTO                : 
PUNTOCOMA            : 
RANGE                : 
REMOVE               : 
RETURN               : 
RPAREN               : 12
STRING               : 
SUBGUION             : 
TIMES                : 7
TRUE                 : 15
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
boolean              : 19
comentario           : 2
cuerpo               : 0
expression           : 1 4 5 12 17 18 22
factor               : 7 8 9
multipleAsignacion   : 18 21
term                 : 4 5 6 7 8

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . comentario
    (3) cuerpo -> . asignacion
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (13) comentario -> . COMMENT
    (14) comentario -> . COMMENTS
    (17) asignacion -> . ID ASSIGN expression
    (18) asignacion -> . multipleAsignacion expression
    (19) asignacion -> . ID ASSIGN boolean
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (20) multipleAsignacion -> . ID ASSIGN
    (21) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (22) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 6
    COMMENTS        shift and go to state 7
    ID              shift and go to state 8
    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    comentario                     shift and go to state 3
    asignacion                     shift and go to state 4
    term                           shift and go to state 5
    multipleAsignacion             shift and go to state 9
    factor                         shift and go to state 10

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 3

    (2) cuerpo -> comentario .

    $end            reduce using rule 2 (cuerpo -> comentario .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (6) expression -> term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor

    PLUS            reduce using rule 6 (expression -> term .)
    MINUS           reduce using rule 6 (expression -> term .)
    $end            reduce using rule 6 (expression -> term .)
    RPAREN          reduce using rule 6 (expression -> term .)
    NUMBER          reduce using rule 6 (expression -> term .)
    CADENA          reduce using rule 6 (expression -> term .)
    LPAREN          reduce using rule 6 (expression -> term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 6

    (13) comentario -> COMMENT .

    $end            reduce using rule 13 (comentario -> COMMENT .)


state 7

    (14) comentario -> COMMENTS .

    $end            reduce using rule 14 (comentario -> COMMENTS .)


state 8

    (17) asignacion -> ID . ASSIGN expression
    (19) asignacion -> ID . ASSIGN boolean
    (20) multipleAsignacion -> ID . ASSIGN
    (21) multipleAsignacion -> ID . ASSIGN multipleAsignacion
    (22) multipleAsignacion -> ID . ASSIGN ( COMA ID ASSIGN ) * expression

    ASSIGN          shift and go to state 18


state 9

    (18) asignacion -> multipleAsignacion . expression
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 19
    term                           shift and go to state 5
    factor                         shift and go to state 10

state 10

    (9) term -> factor .

    TIMES           reduce using rule 9 (term -> factor .)
    DIVIDE          reduce using rule 9 (term -> factor .)
    PLUS            reduce using rule 9 (term -> factor .)
    MINUS           reduce using rule 9 (term -> factor .)
    $end            reduce using rule 9 (term -> factor .)
    RPAREN          reduce using rule 9 (term -> factor .)
    NUMBER          reduce using rule 9 (term -> factor .)
    CADENA          reduce using rule 9 (term -> factor .)
    LPAREN          reduce using rule 9 (term -> factor .)


state 11

    (10) factor -> NUMBER .

    TIMES           reduce using rule 10 (factor -> NUMBER .)
    DIVIDE          reduce using rule 10 (factor -> NUMBER .)
    PLUS            reduce using rule 10 (factor -> NUMBER .)
    MINUS           reduce using rule 10 (factor -> NUMBER .)
    $end            reduce using rule 10 (factor -> NUMBER .)
    RPAREN          reduce using rule 10 (factor -> NUMBER .)
    NUMBER          reduce using rule 10 (factor -> NUMBER .)
    CADENA          reduce using rule 10 (factor -> NUMBER .)
    LPAREN          reduce using rule 10 (factor -> NUMBER .)


state 12

    (11) factor -> CADENA .

    TIMES           reduce using rule 11 (factor -> CADENA .)
    DIVIDE          reduce using rule 11 (factor -> CADENA .)
    PLUS            reduce using rule 11 (factor -> CADENA .)
    MINUS           reduce using rule 11 (factor -> CADENA .)
    $end            reduce using rule 11 (factor -> CADENA .)
    RPAREN          reduce using rule 11 (factor -> CADENA .)
    NUMBER          reduce using rule 11 (factor -> CADENA .)
    CADENA          reduce using rule 11 (factor -> CADENA .)
    LPAREN          reduce using rule 11 (factor -> CADENA .)


state 13

    (12) factor -> LPAREN . expression RPAREN
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 20
    term                           shift and go to state 5
    factor                         shift and go to state 10

state 14

    (4) expression -> expression PLUS . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    term                           shift and go to state 21
    factor                         shift and go to state 10

state 15

    (5) expression -> expression MINUS . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    term                           shift and go to state 22
    factor                         shift and go to state 10

state 16

    (7) term -> term TIMES . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    factor                         shift and go to state 23

state 17

    (8) term -> term DIVIDE . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    factor                         shift and go to state 24

state 18

    (17) asignacion -> ID ASSIGN . expression
    (19) asignacion -> ID ASSIGN . boolean
    (20) multipleAsignacion -> ID ASSIGN .
    (21) multipleAsignacion -> ID ASSIGN . multipleAsignacion
    (22) multipleAsignacion -> ID ASSIGN . ( COMA ID ASSIGN ) * expression
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (15) boolean -> . TRUE
    (16) boolean -> . FALSE
    (20) multipleAsignacion -> . ID ASSIGN
    (21) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (22) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    (               shift and go to state 29
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    ID              shift and go to state 25
    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

  ! NUMBER          [ reduce using rule 20 (multipleAsignacion -> ID ASSIGN .) ]
  ! CADENA          [ reduce using rule 20 (multipleAsignacion -> ID ASSIGN .) ]
  ! LPAREN          [ reduce using rule 20 (multipleAsignacion -> ID ASSIGN .) ]

    expression                     shift and go to state 26
    boolean                        shift and go to state 27
    multipleAsignacion             shift and go to state 28
    term                           shift and go to state 5
    factor                         shift and go to state 10

state 19

    (18) asignacion -> multipleAsignacion expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    $end            reduce using rule 18 (asignacion -> multipleAsignacion expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 20

    (12) factor -> LPAREN expression . RPAREN
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    RPAREN          shift and go to state 32
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 21

    (4) expression -> expression PLUS term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor

    PLUS            reduce using rule 4 (expression -> expression PLUS term .)
    MINUS           reduce using rule 4 (expression -> expression PLUS term .)
    $end            reduce using rule 4 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 4 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 4 (expression -> expression PLUS term .)
    CADENA          reduce using rule 4 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 4 (expression -> expression PLUS term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 22

    (5) expression -> expression MINUS term .
    (7) term -> term . TIMES factor
    (8) term -> term . DIVIDE factor

    PLUS            reduce using rule 5 (expression -> expression MINUS term .)
    MINUS           reduce using rule 5 (expression -> expression MINUS term .)
    $end            reduce using rule 5 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 5 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 5 (expression -> expression MINUS term .)
    CADENA          reduce using rule 5 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 5 (expression -> expression MINUS term .)
    TIMES           shift and go to state 16
    DIVIDE          shift and go to state 17


state 23

    (7) term -> term TIMES factor .

    TIMES           reduce using rule 7 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 7 (term -> term TIMES factor .)
    PLUS            reduce using rule 7 (term -> term TIMES factor .)
    MINUS           reduce using rule 7 (term -> term TIMES factor .)
    $end            reduce using rule 7 (term -> term TIMES factor .)
    RPAREN          reduce using rule 7 (term -> term TIMES factor .)
    NUMBER          reduce using rule 7 (term -> term TIMES factor .)
    CADENA          reduce using rule 7 (term -> term TIMES factor .)
    LPAREN          reduce using rule 7 (term -> term TIMES factor .)


state 24

    (8) term -> term DIVIDE factor .

    TIMES           reduce using rule 8 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 8 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 8 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 8 (term -> term DIVIDE factor .)
    $end            reduce using rule 8 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 8 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 8 (term -> term DIVIDE factor .)
    CADENA          reduce using rule 8 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 8 (term -> term DIVIDE factor .)


state 25

    (20) multipleAsignacion -> ID . ASSIGN
    (21) multipleAsignacion -> ID . ASSIGN multipleAsignacion
    (22) multipleAsignacion -> ID . ASSIGN ( COMA ID ASSIGN ) * expression

    ASSIGN          shift and go to state 33


state 26

    (17) asignacion -> ID ASSIGN expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    $end            reduce using rule 17 (asignacion -> ID ASSIGN expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 27

    (19) asignacion -> ID ASSIGN boolean .

    $end            reduce using rule 19 (asignacion -> ID ASSIGN boolean .)


state 28

    (21) multipleAsignacion -> ID ASSIGN multipleAsignacion .

    NUMBER          reduce using rule 21 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)
    CADENA          reduce using rule 21 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)
    LPAREN          reduce using rule 21 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)


state 29

    (22) multipleAsignacion -> ID ASSIGN ( . COMA ID ASSIGN ) * expression

    COMA            shift and go to state 34


state 30

    (15) boolean -> TRUE .

    $end            reduce using rule 15 (boolean -> TRUE .)


state 31

    (16) boolean -> FALSE .

    $end            reduce using rule 16 (boolean -> FALSE .)


state 32

    (12) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    CADENA          reduce using rule 12 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 12 (factor -> LPAREN expression RPAREN .)


state 33

    (20) multipleAsignacion -> ID ASSIGN .
    (21) multipleAsignacion -> ID ASSIGN . multipleAsignacion
    (22) multipleAsignacion -> ID ASSIGN . ( COMA ID ASSIGN ) * expression
    (20) multipleAsignacion -> . ID ASSIGN
    (21) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (22) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression

    NUMBER          reduce using rule 20 (multipleAsignacion -> ID ASSIGN .)
    CADENA          reduce using rule 20 (multipleAsignacion -> ID ASSIGN .)
    LPAREN          reduce using rule 20 (multipleAsignacion -> ID ASSIGN .)
    (               shift and go to state 29
    ID              shift and go to state 25

    multipleAsignacion             shift and go to state 28

state 34

    (22) multipleAsignacion -> ID ASSIGN ( COMA . ID ASSIGN ) * expression

    ID              shift and go to state 35


state 35

    (22) multipleAsignacion -> ID ASSIGN ( COMA ID . ASSIGN ) * expression

    ASSIGN          shift and go to state 36


state 36

    (22) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN . ) * expression

    )               shift and go to state 37


state 37

    (22) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) . * expression

    *               shift and go to state 38


state 38

    (22) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * . expression
    (4) expression -> . expression PLUS term
    (5) expression -> . expression MINUS term
    (6) expression -> . term
    (7) term -> . term TIMES factor
    (8) term -> . term DIVIDE factor
    (9) term -> . factor
    (10) factor -> . NUMBER
    (11) factor -> . CADENA
    (12) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 11
    CADENA          shift and go to state 12
    LPAREN          shift and go to state 13

    expression                     shift and go to state 39
    term                           shift and go to state 5
    factor                         shift and go to state 10

state 39

    (22) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .
    (4) expression -> expression . PLUS term
    (5) expression -> expression . MINUS term

    NUMBER          reduce using rule 22 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    CADENA          reduce using rule 22 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    LPAREN          reduce using rule 22 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 18 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 18 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 18 resolved as shift
