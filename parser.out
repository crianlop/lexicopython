Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    APPEND
    CADENA
    COMILLAS
    COMILLASSIMPLES
    CORCHETEDER
    CORCHETEIZQ
    DEF
    DIFERENTE
    DIVISIONENTERA
    DOSPUNTOS
    ELSE
    EQUALS
    EXPONENTE
    FOR
    IF
    IN
    INPUT
    IS
    LESSTHAN
    LLAVEDER
    LLAVEIZQ
    MAYORIGUAL
    MENORIGUAL
    MOD
    MORETHAN
    NOT
    NOTS
    OPEN
    OR
    PRINT
    PUNTO
    PUNTOCOMA
    RANGE
    REMOVE
    RETURN
    SUBGUION
    WHILE

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> expression
Rule 2     cuerpo -> comentario
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> list
Rule 5     expression -> expression PLUS term
Rule 6     expression -> expression MINUS term
Rule 7     expression -> term
Rule 8     term -> term TIMES factor
Rule 9     term -> term DIVIDE factor
Rule 10    term -> factor
Rule 11    factor -> NUMBER
Rule 12    factor -> STRING
Rule 13    factor -> LPAREN expression RPAREN
Rule 14    comentario -> COMMENT
Rule 15    comentario -> COMMENTS
Rule 16    boolean -> TRUE
Rule 17    boolean -> FALSE
Rule 18    asignacion -> ID ASSIGN expression
Rule 19    asignacion -> multipleAsignacion expression
Rule 20    asignacion -> ID ASSIGN boolean
Rule 21    multipleAsignacion -> ID ASSIGN
Rule 22    multipleAsignacion -> ID ASSIGN multipleAsignacion
Rule 23    multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression
Rule 24    list -> factor
Rule 25    list -> list COMA factor

Terminals, with rules where they appear

(                    : 23
)                    : 23
*                    : 23
AND                  : 
APPEND               : 
ASSIGN               : 18 20 21 22 23 23
CADENA               : 
COMA                 : 23 25
COMILLAS             : 
COMILLASSIMPLES      : 
COMMENT              : 14
COMMENTS             : 15
CORCHETEDER          : 
CORCHETEIZQ          : 
DEF                  : 
DIFERENTE            : 
DIVIDE               : 9
DIVISIONENTERA       : 
DOSPUNTOS            : 
ELSE                 : 
EQUALS               : 
EXPONENTE            : 
FALSE                : 17
FOR                  : 
ID                   : 18 20 21 22 23 23
IF                   : 
IN                   : 
INPUT                : 
IS                   : 
LESSTHAN             : 
LLAVEDER             : 
LLAVEIZQ             : 
LPAREN               : 13
MAYORIGUAL           : 
MENORIGUAL           : 
MINUS                : 6
MOD                  : 
MORETHAN             : 
NOT                  : 
NOTS                 : 
NUMBER               : 11
OPEN                 : 
OR                   : 
PLUS                 : 5
PRINT                : 
PUNTO                : 
PUNTOCOMA            : 
RANGE                : 
REMOVE               : 
RETURN               : 
RPAREN               : 13
STRING               : 12
SUBGUION             : 
TIMES                : 8
TRUE                 : 16
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
boolean              : 20
comentario           : 2
cuerpo               : 0
expression           : 1 5 6 13 18 19 23
factor               : 8 9 10 24 25
list                 : 4 25
multipleAsignacion   : 19 22
term                 : 5 6 7 8 9

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . expression
    (2) cuerpo -> . comentario
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . list
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (14) comentario -> . COMMENT
    (15) comentario -> . COMMENTS
    (18) asignacion -> . ID ASSIGN expression
    (19) asignacion -> . multipleAsignacion expression
    (20) asignacion -> . ID ASSIGN boolean
    (24) list -> . factor
    (25) list -> . list COMA factor
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (21) multipleAsignacion -> . ID ASSIGN
    (22) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (23) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    COMMENT         shift and go to state 7
    COMMENTS        shift and go to state 8
    ID              shift and go to state 9
    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    cuerpo                         shift and go to state 1
    expression                     shift and go to state 2
    comentario                     shift and go to state 3
    asignacion                     shift and go to state 4
    list                           shift and go to state 5
    term                           shift and go to state 6
    multipleAsignacion             shift and go to state 10
    factor                         shift and go to state 11

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> expression .
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    $end            reduce using rule 1 (cuerpo -> expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 3

    (2) cuerpo -> comentario .

    $end            reduce using rule 2 (cuerpo -> comentario .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> list .
    (25) list -> list . COMA factor

    $end            reduce using rule 4 (cuerpo -> list .)
    COMA            shift and go to state 17


state 6

    (7) expression -> term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expression -> term .)
    MINUS           reduce using rule 7 (expression -> term .)
    $end            reduce using rule 7 (expression -> term .)
    RPAREN          reduce using rule 7 (expression -> term .)
    NUMBER          reduce using rule 7 (expression -> term .)
    STRING          reduce using rule 7 (expression -> term .)
    LPAREN          reduce using rule 7 (expression -> term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 7

    (14) comentario -> COMMENT .

    $end            reduce using rule 14 (comentario -> COMMENT .)


state 8

    (15) comentario -> COMMENTS .

    $end            reduce using rule 15 (comentario -> COMMENTS .)


state 9

    (18) asignacion -> ID . ASSIGN expression
    (20) asignacion -> ID . ASSIGN boolean
    (21) multipleAsignacion -> ID . ASSIGN
    (22) multipleAsignacion -> ID . ASSIGN multipleAsignacion
    (23) multipleAsignacion -> ID . ASSIGN ( COMA ID ASSIGN ) * expression

    ASSIGN          shift and go to state 20


state 10

    (19) asignacion -> multipleAsignacion . expression
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    expression                     shift and go to state 21
    term                           shift and go to state 6
    factor                         shift and go to state 22

state 11

    (24) list -> factor .
    (10) term -> factor .

  ! reduce/reduce conflict for $end resolved using rule 10 (term -> factor .)
    COMA            reduce using rule 24 (list -> factor .)
    TIMES           reduce using rule 10 (term -> factor .)
    DIVIDE          reduce using rule 10 (term -> factor .)
    PLUS            reduce using rule 10 (term -> factor .)
    MINUS           reduce using rule 10 (term -> factor .)
    $end            reduce using rule 10 (term -> factor .)

  ! $end            [ reduce using rule 24 (list -> factor .) ]


state 12

    (11) factor -> NUMBER .

    COMA            reduce using rule 11 (factor -> NUMBER .)
    $end            reduce using rule 11 (factor -> NUMBER .)
    TIMES           reduce using rule 11 (factor -> NUMBER .)
    DIVIDE          reduce using rule 11 (factor -> NUMBER .)
    PLUS            reduce using rule 11 (factor -> NUMBER .)
    MINUS           reduce using rule 11 (factor -> NUMBER .)
    RPAREN          reduce using rule 11 (factor -> NUMBER .)
    NUMBER          reduce using rule 11 (factor -> NUMBER .)
    STRING          reduce using rule 11 (factor -> NUMBER .)
    LPAREN          reduce using rule 11 (factor -> NUMBER .)


state 13

    (12) factor -> STRING .

    COMA            reduce using rule 12 (factor -> STRING .)
    $end            reduce using rule 12 (factor -> STRING .)
    TIMES           reduce using rule 12 (factor -> STRING .)
    DIVIDE          reduce using rule 12 (factor -> STRING .)
    PLUS            reduce using rule 12 (factor -> STRING .)
    MINUS           reduce using rule 12 (factor -> STRING .)
    RPAREN          reduce using rule 12 (factor -> STRING .)
    NUMBER          reduce using rule 12 (factor -> STRING .)
    STRING          reduce using rule 12 (factor -> STRING .)
    LPAREN          reduce using rule 12 (factor -> STRING .)


state 14

    (13) factor -> LPAREN . expression RPAREN
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    expression                     shift and go to state 23
    term                           shift and go to state 6
    factor                         shift and go to state 22

state 15

    (5) expression -> expression PLUS . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    term                           shift and go to state 24
    factor                         shift and go to state 22

state 16

    (6) expression -> expression MINUS . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    term                           shift and go to state 25
    factor                         shift and go to state 22

state 17

    (25) list -> list COMA . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    factor                         shift and go to state 26

state 18

    (8) term -> term TIMES . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    factor                         shift and go to state 27

state 19

    (9) term -> term DIVIDE . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    factor                         shift and go to state 28

state 20

    (18) asignacion -> ID ASSIGN . expression
    (20) asignacion -> ID ASSIGN . boolean
    (21) multipleAsignacion -> ID ASSIGN .
    (22) multipleAsignacion -> ID ASSIGN . multipleAsignacion
    (23) multipleAsignacion -> ID ASSIGN . ( COMA ID ASSIGN ) * expression
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (16) boolean -> . TRUE
    (17) boolean -> . FALSE
    (21) multipleAsignacion -> . ID ASSIGN
    (22) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (23) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
    (               shift and go to state 33
    TRUE            shift and go to state 34
    FALSE           shift and go to state 35
    ID              shift and go to state 29
    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

  ! NUMBER          [ reduce using rule 21 (multipleAsignacion -> ID ASSIGN .) ]
  ! STRING          [ reduce using rule 21 (multipleAsignacion -> ID ASSIGN .) ]
  ! LPAREN          [ reduce using rule 21 (multipleAsignacion -> ID ASSIGN .) ]

    expression                     shift and go to state 30
    boolean                        shift and go to state 31
    multipleAsignacion             shift and go to state 32
    term                           shift and go to state 6
    factor                         shift and go to state 22

state 21

    (19) asignacion -> multipleAsignacion expression .
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    $end            reduce using rule 19 (asignacion -> multipleAsignacion expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 22

    (10) term -> factor .

    TIMES           reduce using rule 10 (term -> factor .)
    DIVIDE          reduce using rule 10 (term -> factor .)
    PLUS            reduce using rule 10 (term -> factor .)
    MINUS           reduce using rule 10 (term -> factor .)
    $end            reduce using rule 10 (term -> factor .)
    RPAREN          reduce using rule 10 (term -> factor .)
    NUMBER          reduce using rule 10 (term -> factor .)
    STRING          reduce using rule 10 (term -> factor .)
    LPAREN          reduce using rule 10 (term -> factor .)


state 23

    (13) factor -> LPAREN expression . RPAREN
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    RPAREN          shift and go to state 36
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 24

    (5) expression -> expression PLUS term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    PLUS            reduce using rule 5 (expression -> expression PLUS term .)
    MINUS           reduce using rule 5 (expression -> expression PLUS term .)
    $end            reduce using rule 5 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 5 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 5 (expression -> expression PLUS term .)
    STRING          reduce using rule 5 (expression -> expression PLUS term .)
    LPAREN          reduce using rule 5 (expression -> expression PLUS term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 25

    (6) expression -> expression MINUS term .
    (8) term -> term . TIMES factor
    (9) term -> term . DIVIDE factor

    PLUS            reduce using rule 6 (expression -> expression MINUS term .)
    MINUS           reduce using rule 6 (expression -> expression MINUS term .)
    $end            reduce using rule 6 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 6 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 6 (expression -> expression MINUS term .)
    STRING          reduce using rule 6 (expression -> expression MINUS term .)
    LPAREN          reduce using rule 6 (expression -> expression MINUS term .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19


state 26

    (25) list -> list COMA factor .

    COMA            reduce using rule 25 (list -> list COMA factor .)
    $end            reduce using rule 25 (list -> list COMA factor .)


state 27

    (8) term -> term TIMES factor .

    TIMES           reduce using rule 8 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 8 (term -> term TIMES factor .)
    PLUS            reduce using rule 8 (term -> term TIMES factor .)
    MINUS           reduce using rule 8 (term -> term TIMES factor .)
    $end            reduce using rule 8 (term -> term TIMES factor .)
    RPAREN          reduce using rule 8 (term -> term TIMES factor .)
    NUMBER          reduce using rule 8 (term -> term TIMES factor .)
    STRING          reduce using rule 8 (term -> term TIMES factor .)
    LPAREN          reduce using rule 8 (term -> term TIMES factor .)


state 28

    (9) term -> term DIVIDE factor .

    TIMES           reduce using rule 9 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 9 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 9 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 9 (term -> term DIVIDE factor .)
    $end            reduce using rule 9 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 9 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 9 (term -> term DIVIDE factor .)
    STRING          reduce using rule 9 (term -> term DIVIDE factor .)
    LPAREN          reduce using rule 9 (term -> term DIVIDE factor .)


state 29

    (21) multipleAsignacion -> ID . ASSIGN
    (22) multipleAsignacion -> ID . ASSIGN multipleAsignacion
    (23) multipleAsignacion -> ID . ASSIGN ( COMA ID ASSIGN ) * expression

    ASSIGN          shift and go to state 37


state 30

    (18) asignacion -> ID ASSIGN expression .
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    $end            reduce using rule 18 (asignacion -> ID ASSIGN expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16


state 31

    (20) asignacion -> ID ASSIGN boolean .

    $end            reduce using rule 20 (asignacion -> ID ASSIGN boolean .)


state 32

    (22) multipleAsignacion -> ID ASSIGN multipleAsignacion .

    NUMBER          reduce using rule 22 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)
    STRING          reduce using rule 22 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)
    LPAREN          reduce using rule 22 (multipleAsignacion -> ID ASSIGN multipleAsignacion .)


state 33

    (23) multipleAsignacion -> ID ASSIGN ( . COMA ID ASSIGN ) * expression

    COMA            shift and go to state 38


state 34

    (16) boolean -> TRUE .

    $end            reduce using rule 16 (boolean -> TRUE .)


state 35

    (17) boolean -> FALSE .

    $end            reduce using rule 17 (boolean -> FALSE .)


state 36

    (13) factor -> LPAREN expression RPAREN .

    COMA            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    NUMBER          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    STRING          reduce using rule 13 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 13 (factor -> LPAREN expression RPAREN .)


state 37

    (21) multipleAsignacion -> ID ASSIGN .
    (22) multipleAsignacion -> ID ASSIGN . multipleAsignacion
    (23) multipleAsignacion -> ID ASSIGN . ( COMA ID ASSIGN ) * expression
    (21) multipleAsignacion -> . ID ASSIGN
    (22) multipleAsignacion -> . ID ASSIGN multipleAsignacion
    (23) multipleAsignacion -> . ID ASSIGN ( COMA ID ASSIGN ) * expression

    NUMBER          reduce using rule 21 (multipleAsignacion -> ID ASSIGN .)
    STRING          reduce using rule 21 (multipleAsignacion -> ID ASSIGN .)
    LPAREN          reduce using rule 21 (multipleAsignacion -> ID ASSIGN .)
    (               shift and go to state 33
    ID              shift and go to state 29

    multipleAsignacion             shift and go to state 32

state 38

    (23) multipleAsignacion -> ID ASSIGN ( COMA . ID ASSIGN ) * expression

    ID              shift and go to state 39


state 39

    (23) multipleAsignacion -> ID ASSIGN ( COMA ID . ASSIGN ) * expression

    ASSIGN          shift and go to state 40


state 40

    (23) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN . ) * expression

    )               shift and go to state 41


state 41

    (23) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) . * expression

    *               shift and go to state 42


state 42

    (23) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * . expression
    (5) expression -> . expression PLUS term
    (6) expression -> . expression MINUS term
    (7) expression -> . term
    (8) term -> . term TIMES factor
    (9) term -> . term DIVIDE factor
    (10) term -> . factor
    (11) factor -> . NUMBER
    (12) factor -> . STRING
    (13) factor -> . LPAREN expression RPAREN

    NUMBER          shift and go to state 12
    STRING          shift and go to state 13
    LPAREN          shift and go to state 14

    expression                     shift and go to state 43
    term                           shift and go to state 6
    factor                         shift and go to state 22

state 43

    (23) multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .
    (5) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    NUMBER          reduce using rule 23 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    STRING          reduce using rule 23 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    LPAREN          reduce using rule 23 (multipleAsignacion -> ID ASSIGN ( COMA ID ASSIGN ) * expression .)
    PLUS            shift and go to state 15
    MINUS           shift and go to state 16

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NUMBER in state 20 resolved as shift
WARNING: shift/reduce conflict for STRING in state 20 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 20 resolved as shift
WARNING: reduce/reduce conflict in state 11 resolved using rule (term -> factor)
WARNING: rejected rule (list -> factor) in state 11
