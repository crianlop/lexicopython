
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND AS ASSIGN BOOLEAN CADENA COMA COMILLAS COMILLASSIMPLES COMMENT COMMENTS CORCHETEDER CORCHETEIZQ DEF DIFERENTE DIVIDE DIVISIONENTERA DOSPUNTOS ELSE EQUALS EXPONENTE FLOAT FOR ID IF IMPORT IN INPUT IS LESSTHAN LLAVEDER LLAVEIZQ LPAREN MAYORIGUAL MENORIGUAL MINUS MOD MORETHAN NONE NOT NOTS NUMBER OPEN OR PLUS PRINT PUNTO PUNTOCOMA RANGE REMOVE RETURN RPAREN SALTOLINEA STRING SUBGUION TIMES WHILEcuerpo : import\n              | return\n              | cuerpoEstructuracuerpoEstructura :  expression\n                        | comentario\n                        | asignacion\n                        | if\n                        | while   \n                        | for \n                        | print  \n                        | inputF\n                        | openF \n                        | funcion \n                        | comparacion \n                        | operacionConectoresLogicos  \n                        | tupla\n                        | lista\n                        | diccionario\n                        | conjunto\n                        | append\n                        | removeexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTE factorterm : term DIVISIONENTERA factorterm : term MOD factorterm : factorfactor : NUMBER\n              | STRING\n              | FLOAT\n              | CADENA\n              | ID   \n              factor : LPAREN expression RPARENcomentario : COMMENT\n                 | COMMENTSasignacion : ID ASSIGN expression\n                  | multipleAsignacion expression\n                  | valoresID ASSIGN valoresComa\n                  | ID ASSIGN BOOLEAN\n                  | ID ASSIGN funcionmultipleAsignacion : ID ASSIGN \n                          | ID ASSIGN multipleAsignacionvaloresID : ID\n                | valoresID COMA IDvaloresComa : expression\n                   | valoresComa COMA expression\n                   | valoresComa COMAvaloresDic  : factor DOSPUNTOS factor\n                   | valoresDic COMA factor DOSPUNTOS factor\n                   | valoresDic COMAdiccionario : LLAVEIZQ valoresDic LLAVEDER\n                | LLAVEIZQ LLAVEDER\n                | ID ASSIGN diccionariolista : CORCHETEIZQ valoresComa CORCHETEDER\n             | ID ASSIGN lista\n             | ID ASSIGN CORCHETEIZQ CORCHETEDERtupla : LPAREN valoresComa RPAREN\n             | ID ASSIGN tuplaconjunto : LLAVEIZQ valoresComa LLAVEDER\n                | ID ASSIGN conjuntocomparacion : ID operadorLogico expression\n                   | BOOLEAN\n                   | comparacion conectoresLogicos ID\n                   | NOTS BOOLEAN\n                   | expression operadorLogico expression\n                   | comparacion operadorLogico ID\n                   | ID operadorLogico BOOLEAN\n                   | comparacion conectoresLogicos comparacion\n                   | BOOLEAN EQUALS BOOLEAN\n                   | BOOLEAN DIFERENTE BOOLEAN\n                   \n                   operadorLogico : EQUALS\n                      | MAYORIGUAL\n                      | MENORIGUAL\n                      | LESSTHAN\n                      | MORETHAN\n                      | DIFERENTE\n    conectoresLogicos : AND\n                         | ORoperacionConectoresLogicos : NOT ID\n                                  | ID conectoresLogicos ID\n                                  | operacionConectoresLogicos conectoresLogicos IDif : IF LPAREN comparacion RPAREN DOSPUNTOS cuerpoEstructura\n          | IF comparacion DOSPUNTOS SALTOLINEA cuerpoEstructura else cuerpoEstructura\n          | IF ID DOSPUNTOS cuerpoEstructura else cuerpoEstructura\n          | IF LPAREN ID RPAREN DOSPUNTOS cuerpoEstructuraelse : ELSE DOSPUNTOSwhile : WHILE LPAREN comparacion RPAREN DOSPUNTOS\n             | WHILE comparacion DOSPUNTOS\n             | WHILE ID DOSPUNTOSfor : FOR ID IN RANGE LPAREN NUMBER RPAREN DOSPUNTOS\n           | FOR ID IN ID DOSPUNTOS\n           | FOR ID IN lista\n           | FOR ID IN tupla\n           | FOR ID IN conjuntoprint : PRINT LPAREN factor RPAREN\n             | PRINT LPAREN ID RPARENinputF : ID ASSIGN INPUT LPAREN RPAREN\n              | INPUT LPAREN RPARENopenF : OPEN LPAREN CADENA RPAREN\n             | OPEN LPAREN CADENA COMA CADENA RPAREN\n             | ID ASSIGN OPEN LPAREN CADENA COMA CADENA RPAREN\n             | ID ASSIGN OPEN LPAREN ID COMA CADENA RPARENfuncion : DEF ID LPAREN valoresID RPAREN DOSPUNTOS\n                | DEF ID LPAREN RPAREN DOSPUNTOS\n                | ID LPAREN RPAREN\n                | ID LPAREN valoresID RPARENdatos : lista\n             | tupla\n             | conjunto\n             | diccionario\n    return : RETURN expression\n              | RETURN NONEappend : ID PUNTO APPEND LPAREN ID RPAREN\n              | ID PUNTO APPEND LPAREN expression RPAREN\n              | ID PUNTO APPEND LPAREN datos RPARENremove : ID PUNTO REMOVE LPAREN ID RPAREN\n              | ID PUNTO REMOVE LPAREN RPAREN\n              | ID PUNTO REMOVE LPAREN expression RPARENimport : IMPORT ID\n              | IMPORT ID AS ID'
    
_lr_action_items = {'IMPORT':([0,],[5,]),'RETURN':([0,],[7,]),'COMMENT':([0,147,176,210,211,213,233,235,],[27,27,27,27,27,27,27,-89,]),'COMMENTS':([0,147,176,210,211,213,233,235,],[28,28,28,28,28,28,28,-89,]),'ID':([0,5,7,29,32,33,34,35,42,44,45,46,50,51,52,53,55,56,57,58,59,60,61,62,66,67,68,69,70,71,72,73,74,75,76,77,79,80,83,89,93,105,114,117,147,149,155,160,163,165,167,169,172,173,176,182,186,206,210,211,213,217,222,226,233,235,],[6,49,65,65,85,65,91,92,96,98,65,65,106,118,65,123,-74,-75,-76,-77,-78,-79,-80,-81,65,65,65,65,131,132,133,65,65,65,65,65,65,140,144,152,157,166,65,-45,6,65,180,118,65,65,195,197,199,207,6,65,65,65,6,6,6,236,65,243,6,-89,]),'IF':([0,147,176,210,211,213,233,235,],[32,32,32,32,32,32,32,-89,]),'WHILE':([0,147,176,210,211,213,233,235,],[34,34,34,34,34,34,34,-89,]),'FOR':([0,147,176,210,211,213,233,235,],[35,35,35,35,35,35,35,-89,]),'PRINT':([0,147,176,210,211,213,233,235,],[37,37,37,37,37,37,37,-89,]),'INPUT':([0,50,147,176,210,211,213,233,235,],[39,110,39,39,39,39,39,39,-89,]),'OPEN':([0,50,147,176,210,211,213,233,235,],[40,111,40,40,40,40,40,40,-89,]),'DEF':([0,50,147,176,210,211,213,233,235,],[42,42,42,42,42,42,42,42,-89,]),'BOOLEAN':([0,32,34,43,50,52,55,56,57,58,59,60,61,62,70,81,82,83,89,147,176,210,211,213,233,235,],[31,31,31,97,108,122,-74,-75,-76,-77,-78,-79,-80,-81,31,141,142,31,31,31,31,31,31,31,31,-89,]),'NOTS':([0,32,34,61,62,70,83,89,147,176,210,211,213,233,235,],[43,43,43,-80,-81,43,43,43,43,43,43,43,43,43,-89,]),'NOT':([0,147,176,210,211,213,233,235,],[44,44,44,44,44,44,44,-89,]),'LPAREN':([0,6,7,29,32,33,34,37,39,40,45,46,50,52,55,56,57,58,59,60,61,62,66,67,68,69,70,73,74,75,76,77,79,83,89,93,96,106,110,111,114,117,124,125,147,149,155,163,165,167,172,173,176,181,182,186,206,210,211,213,217,222,226,233,235,],[33,51,66,66,83,66,89,93,94,95,66,66,33,66,-74,-75,-76,-77,-78,-79,-80,-81,66,66,66,66,66,66,66,66,66,66,66,66,66,66,160,51,168,169,66,-45,172,173,33,66,182,66,66,182,33,66,33,218,66,66,66,33,33,33,182,66,182,33,-89,]),'CORCHETEIZQ':([0,50,147,155,167,172,176,210,211,213,217,226,233,235,],[45,114,45,45,114,45,45,45,45,45,114,114,45,-89,]),'LLAVEIZQ':([0,50,147,155,167,172,176,210,211,213,217,226,233,235,],[46,46,46,186,46,206,46,46,46,46,186,206,46,-89,]),'NUMBER':([0,7,29,32,33,34,45,46,50,52,55,56,57,58,59,60,61,62,66,67,68,69,70,73,74,75,76,77,79,83,89,93,114,117,147,149,163,165,167,172,173,176,182,186,206,210,211,213,218,222,233,235,],[36,36,36,36,36,36,36,36,36,36,-74,-75,-76,-77,-78,-79,-80,-81,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-45,36,36,36,36,-44,36,36,36,36,36,36,36,36,36,237,36,36,-89,]),'STRING':([0,7,29,32,33,34,45,46,50,52,55,56,57,58,59,60,61,62,66,67,68,69,70,73,74,75,76,77,79,83,89,93,114,117,147,149,163,165,167,172,173,176,182,186,206,210,211,213,222,233,235,],[47,47,47,47,47,47,47,47,47,47,-74,-75,-76,-77,-78,-79,-80,-81,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-45,47,47,47,47,-44,47,47,47,47,47,47,47,47,47,47,47,-89,]),'FLOAT':([0,7,29,32,33,34,45,46,50,52,55,56,57,58,59,60,61,62,66,67,68,69,70,73,74,75,76,77,79,83,89,93,114,117,147,149,163,165,167,172,173,176,182,186,206,210,211,213,222,233,235,],[48,48,48,48,48,48,48,48,48,48,-74,-75,-76,-77,-78,-79,-80,-81,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-45,48,48,48,48,-44,48,48,48,48,48,48,48,48,48,48,48,-89,]),'CADENA':([0,7,29,32,33,34,45,46,50,52,55,56,57,58,59,60,61,62,66,67,68,69,70,73,74,75,76,77,79,83,89,93,95,114,117,147,149,163,165,167,169,172,173,176,182,186,190,206,210,211,213,222,223,224,233,235,],[41,41,41,41,41,41,41,41,41,41,-74,-75,-76,-77,-78,-79,-80,-81,41,41,41,41,41,41,41,41,41,41,41,41,41,41,159,41,-45,41,41,41,41,-44,198,41,41,41,41,41,219,41,41,41,41,41,241,242,41,-89,]),'$end':([1,2,3,4,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,38,41,47,48,49,63,64,65,78,97,98,100,102,106,107,108,109,112,113,115,116,119,121,122,123,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,148,149,150,153,154,158,161,162,164,166,170,171,178,183,184,185,187,188,189,196,208,215,216,221,225,227,228,229,230,231,232,234,238,239,244,246,247,248,],[0,-1,-2,-3,-35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-37,-38,-65,-31,-30,-34,-32,-33,-122,-114,-115,-35,-40,-67,-82,-48,-55,-35,-39,-42,-43,-61,-58,-56,-63,-108,-64,-70,-83,-22,-23,-68,-71,-66,-69,-84,-25,-26,-27,-28,-29,-41,-72,-73,-60,-50,-36,-91,-92,-101,-57,-54,-62,-123,-59,-109,-49,-95,-96,-97,-98,-99,-102,-100,-120,-90,-94,-107,-116,-117,-118,-119,-121,-85,-88,-87,-103,-106,-86,-105,-104,-93,]),'ASSIGN':([6,30,106,140,180,195,199,236,243,],[50,79,167,-47,217,167,226,217,226,]),'PUNTO':([6,],[54,]),'COMA':([6,26,30,36,38,41,47,48,65,87,88,99,100,101,103,104,118,120,127,128,134,135,136,137,138,139,140,149,150,159,163,178,191,194,197,198,240,],[-46,-24,80,-31,-30,-34,-32,-33,-35,149,-48,149,-48,163,149,-30,-46,80,-22,-23,-25,-26,-27,-28,-29,149,-47,-50,-36,190,-53,-49,80,-51,223,224,-52,]),'TIMES':([6,26,36,38,41,47,48,65,85,91,104,106,127,128,131,134,135,136,137,138,144,150,152,199,207,],[-35,73,-31,-30,-34,-32,-33,-35,-35,-35,-30,-35,73,73,-35,-25,-26,-27,-28,-29,-35,-36,-35,-35,-35,]),'DIVIDE':([6,26,36,38,41,47,48,65,85,91,104,106,127,128,131,134,135,136,137,138,144,150,152,199,207,],[-35,74,-31,-30,-34,-32,-33,-35,-35,-35,-30,-35,74,74,-35,-25,-26,-27,-28,-29,-35,-36,-35,-35,-35,]),'EXPONENTE':([6,26,36,38,41,47,48,65,85,91,104,106,127,128,131,134,135,136,137,138,144,150,152,199,207,],[-35,75,-31,-30,-34,-32,-33,-35,-35,-35,-30,-35,75,75,-35,-25,-26,-27,-28,-29,-35,-36,-35,-35,-35,]),'DIVISIONENTERA':([6,26,36,38,41,47,48,65,85,91,104,106,127,128,131,134,135,136,137,138,144,150,152,199,207,],[-35,76,-31,-30,-34,-32,-33,-35,-35,-35,-30,-35,76,76,-35,-25,-26,-27,-28,-29,-35,-36,-35,-35,-35,]),'MOD':([6,26,36,38,41,47,48,65,85,91,104,106,127,128,131,134,135,136,137,138,144,150,152,199,207,],[-35,77,-31,-30,-34,-32,-33,-35,-35,-35,-30,-35,77,77,-35,-25,-26,-27,-28,-29,-35,-36,-35,-35,-35,]),'PLUS':([6,8,26,36,38,41,47,48,63,65,78,85,86,88,91,100,104,106,107,121,126,127,128,129,131,134,135,136,137,138,144,145,150,152,178,199,200,207,209,],[-35,67,-24,-31,-30,-34,-32,-33,67,-35,67,-35,67,67,-35,67,-30,-35,67,67,67,-22,-23,67,-35,-25,-26,-27,-28,-29,-35,67,-36,-35,67,-35,67,-35,67,]),'MINUS':([6,8,26,36,38,41,47,48,63,65,78,85,86,88,91,100,104,106,107,121,126,127,128,129,131,134,135,136,137,138,144,145,150,152,178,199,200,207,209,],[-35,68,-24,-31,-30,-34,-32,-33,68,-35,68,-35,68,68,-35,68,-30,-35,68,68,68,-22,-23,68,-35,-25,-26,-27,-28,-29,-35,68,-36,-35,68,-35,68,-35,68,]),'EQUALS':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[55,55,55,-24,81,-31,-30,-34,-32,-33,-35,55,55,55,55,55,-67,-64,-70,-22,-23,-68,55,55,-69,-25,-26,-27,-28,-29,-72,-73,55,55,55,-36,55,55,]),'MAYORIGUAL':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[56,56,56,-24,-65,-31,-30,-34,-32,-33,-35,56,56,56,56,56,-67,-64,-70,-22,-23,-68,56,56,-69,-25,-26,-27,-28,-29,-72,-73,56,56,56,-36,56,56,]),'MENORIGUAL':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[57,57,57,-24,-65,-31,-30,-34,-32,-33,-35,57,57,57,57,57,-67,-64,-70,-22,-23,-68,57,57,-69,-25,-26,-27,-28,-29,-72,-73,57,57,57,-36,57,57,]),'LESSTHAN':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[58,58,58,-24,-65,-31,-30,-34,-32,-33,-35,58,58,58,58,58,-67,-64,-70,-22,-23,-68,58,58,-69,-25,-26,-27,-28,-29,-72,-73,58,58,58,-36,58,58,]),'MORETHAN':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[59,59,59,-24,-65,-31,-30,-34,-32,-33,-35,59,59,59,59,59,-67,-64,-70,-22,-23,-68,59,59,-69,-25,-26,-27,-28,-29,-72,-73,59,59,59,-36,59,59,]),'DIFERENTE':([6,8,18,26,31,36,38,41,47,48,65,84,85,86,90,91,97,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,143,144,145,150,151,152,],[60,60,60,-24,82,-31,-30,-34,-32,-33,-35,60,60,60,60,60,-67,-64,-70,-22,-23,-68,60,60,-69,-25,-26,-27,-28,-29,-72,-73,60,60,60,-36,60,60,]),'ELSE':([6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,36,38,41,47,48,65,78,97,98,100,102,106,107,108,109,112,113,115,116,119,121,122,123,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,148,149,150,153,154,158,161,162,164,170,171,177,178,183,184,185,187,188,189,196,208,212,215,216,221,225,227,228,229,230,231,232,234,238,239,244,246,247,248,],[-35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-37,-38,-65,-31,-30,-34,-32,-33,-35,-40,-67,-82,-48,-55,-35,-39,-42,-43,-61,-58,-56,-63,-108,-64,-70,-83,-22,-23,-68,-71,-66,-69,-84,-25,-26,-27,-28,-29,-41,-72,-73,-60,-50,-36,-91,-92,-101,-57,-54,-62,-59,-109,214,-49,-95,-96,-97,-98,-99,-102,-100,-120,214,-90,-94,-107,-116,-117,-118,-119,-121,-85,-88,-87,-103,-106,-86,-105,-104,-93,]),'AND':([6,18,19,26,31,36,38,41,47,48,65,84,90,97,98,121,122,123,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,150,151,],[61,61,61,-24,-65,-31,-30,-34,-32,-33,-35,61,61,-67,-82,-64,-70,-83,-22,-23,-68,61,-66,-69,-84,-25,-26,-27,-28,-29,-72,-73,61,-36,61,]),'OR':([6,18,19,26,31,36,38,41,47,48,65,84,90,97,98,121,122,123,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,150,151,],[62,62,62,-24,-65,-31,-30,-34,-32,-33,-35,62,62,-67,-82,-64,-70,-83,-22,-23,-68,62,-66,-69,-84,-25,-26,-27,-28,-29,-72,-73,62,-36,62,]),'NONE':([7,],[64,]),'RPAREN':([26,31,36,38,41,47,48,51,65,87,88,94,97,100,102,112,113,115,116,118,120,121,122,126,127,128,129,130,131,132,134,135,136,137,138,140,141,142,143,144,145,148,149,150,151,152,156,157,159,160,161,162,164,168,170,173,178,191,199,200,201,202,203,204,205,207,209,219,237,241,242,],[-24,-65,-31,-30,-34,-32,-33,119,-35,148,150,158,-67,-48,-55,-61,-58,-56,-63,-46,171,-64,-70,150,-22,-23,-68,-71,-66,-69,-25,-26,-27,-28,-29,-47,-72,-73,174,175,150,-60,-50,-36,179,-35,187,188,189,192,-57,-54,-62,196,-59,208,-49,220,225,227,228,-110,-111,-112,-113,229,230,238,245,246,247,]),'CORCHETEDER':([26,36,38,41,47,48,65,99,100,114,127,128,134,135,136,137,138,149,150,178,],[-24,-31,-30,-34,-32,-33,-35,161,-48,170,-22,-23,-25,-26,-27,-28,-29,-50,-36,-49,]),'LLAVEDER':([26,36,38,41,46,47,48,65,100,101,103,104,127,128,134,135,136,137,138,149,150,163,178,194,206,240,],[-24,-31,-30,-34,102,-32,-33,-35,-48,162,164,-30,-22,-23,-25,-26,-27,-28,-29,-50,-36,-53,-49,-51,102,-52,]),'DOSPUNTOS':([26,31,36,38,41,47,48,65,84,85,90,91,97,104,121,122,127,128,129,130,131,132,134,135,136,137,138,141,142,150,174,175,179,180,192,193,214,220,245,],[-24,-65,-31,-30,-34,-32,-33,-35,146,147,153,154,-67,165,-64,-70,-22,-23,-68,-71,-66,-69,-25,-26,-27,-28,-29,-72,-73,-36,210,211,215,216,221,222,235,239,248,]),'AS':([49,],[105,]),'APPEND':([54,],[124,]),'REMOVE':([54,],[125,]),'IN':([92,],[155,]),'SALTOLINEA':([146,],[176,]),'RANGE':([155,],[181,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'import':([0,],[2,]),'return':([0,],[3,]),'cuerpoEstructura':([0,147,176,210,211,213,233,],[4,177,212,231,232,234,244,]),'expression':([0,7,29,32,33,34,45,46,50,52,66,69,70,79,83,89,114,147,149,172,173,176,182,186,206,210,211,213,233,],[8,63,78,86,88,86,100,100,107,121,126,129,86,100,145,145,100,8,178,200,209,8,100,100,100,8,8,8,8,]),'comentario':([0,147,176,210,211,213,233,],[9,9,9,9,9,9,9,]),'asignacion':([0,147,176,210,211,213,233,],[10,10,10,10,10,10,10,]),'if':([0,147,176,210,211,213,233,],[11,11,11,11,11,11,11,]),'while':([0,147,176,210,211,213,233,],[12,12,12,12,12,12,12,]),'for':([0,147,176,210,211,213,233,],[13,13,13,13,13,13,13,]),'print':([0,147,176,210,211,213,233,],[14,14,14,14,14,14,14,]),'inputF':([0,147,176,210,211,213,233,],[15,15,15,15,15,15,15,]),'openF':([0,147,176,210,211,213,233,],[16,16,16,16,16,16,16,]),'funcion':([0,50,147,176,210,211,213,233,],[17,109,17,17,17,17,17,17,]),'comparacion':([0,32,34,70,83,89,147,176,210,211,213,233,],[18,84,90,130,143,151,18,18,18,18,18,18,]),'operacionConectoresLogicos':([0,147,176,210,211,213,233,],[19,19,19,19,19,19,19,]),'tupla':([0,50,147,155,167,172,176,210,211,213,217,226,233,],[20,112,20,184,112,203,20,20,20,20,112,112,20,]),'lista':([0,50,147,155,167,172,176,210,211,213,217,226,233,],[21,113,21,183,113,202,21,21,21,21,113,113,21,]),'diccionario':([0,50,147,167,172,176,210,211,213,226,233,],[22,115,22,115,205,22,22,22,22,115,22,]),'conjunto':([0,50,147,155,167,172,176,210,211,213,217,226,233,],[23,116,23,185,116,204,23,23,23,23,116,116,23,]),'append':([0,147,176,210,211,213,233,],[24,24,24,24,24,24,24,]),'remove':([0,147,176,210,211,213,233,],[25,25,25,25,25,25,25,]),'term':([0,7,29,32,33,34,45,46,50,52,66,67,68,69,70,79,83,89,114,147,149,172,173,176,182,186,206,210,211,213,233,],[26,26,26,26,26,26,26,26,26,26,26,127,128,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'multipleAsignacion':([0,50,147,167,176,210,211,213,233,],[29,117,29,117,29,29,29,29,29,]),'valoresID':([0,51,147,160,176,210,211,213,233,],[30,120,30,191,30,30,30,30,30,]),'factor':([0,7,29,32,33,34,45,46,50,52,66,67,68,69,70,73,74,75,76,77,79,83,89,93,114,147,149,163,165,172,173,176,182,186,206,210,211,213,222,233,],[38,38,38,38,38,38,38,104,38,38,38,38,38,38,38,134,135,136,137,138,38,38,38,156,38,38,38,193,194,38,38,38,38,38,104,38,38,38,240,38,]),'operadorLogico':([6,8,18,84,85,86,90,91,130,131,143,144,145,151,152,],[52,69,71,71,52,69,71,52,71,52,71,52,69,71,52,]),'conectoresLogicos':([6,18,19,84,90,130,143,151,],[53,70,72,70,70,70,70,70,]),'valoresComa':([33,45,46,79,114,182,186,206,],[87,99,103,139,99,87,103,103,]),'valoresDic':([46,206,],[101,101,]),'datos':([172,],[201,]),'else':([177,212,],[213,233,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> import','cuerpo',1,'p_cuerpo','sintatico.py',6),
  ('cuerpo -> return','cuerpo',1,'p_cuerpo','sintatico.py',7),
  ('cuerpo -> cuerpoEstructura','cuerpo',1,'p_cuerpo','sintatico.py',8),
  ('cuerpoEstructura -> expression','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',12),
  ('cuerpoEstructura -> comentario','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',13),
  ('cuerpoEstructura -> asignacion','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',14),
  ('cuerpoEstructura -> if','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',15),
  ('cuerpoEstructura -> while','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',16),
  ('cuerpoEstructura -> for','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',17),
  ('cuerpoEstructura -> print','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',18),
  ('cuerpoEstructura -> inputF','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',19),
  ('cuerpoEstructura -> openF','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',20),
  ('cuerpoEstructura -> funcion','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',21),
  ('cuerpoEstructura -> comparacion','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',22),
  ('cuerpoEstructura -> operacionConectoresLogicos','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',23),
  ('cuerpoEstructura -> tupla','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',24),
  ('cuerpoEstructura -> lista','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',25),
  ('cuerpoEstructura -> diccionario','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',26),
  ('cuerpoEstructura -> conjunto','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',27),
  ('cuerpoEstructura -> append','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',28),
  ('cuerpoEstructura -> remove','cuerpoEstructura',1,'p_cuerpoEstructuras','sintatico.py',29),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintatico.py',34),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintatico.py',39),
  ('expression -> term','expression',1,'p_expression_term','sintatico.py',44),
  ('term -> term TIMES factor','term',3,'p_term_times','sintatico.py',48),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintatico.py',53),
  ('term -> term EXPONENTE factor','term',3,'p_term_cuadrado','sintatico.py',58),
  ('term -> term DIVISIONENTERA factor','term',3,'p_term_divEntera','sintatico.py',63),
  ('term -> term MOD factor','term',3,'p_term_Mod','sintatico.py',68),
  ('term -> factor','term',1,'p_term_factor','sintatico.py',73),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintatico.py',77),
  ('factor -> STRING','factor',1,'p_factor_num','sintatico.py',78),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintatico.py',79),
  ('factor -> CADENA','factor',1,'p_factor_num','sintatico.py',80),
  ('factor -> ID','factor',1,'p_factor_num','sintatico.py',81),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','sintatico.py',86),
  ('comentario -> COMMENT','comentario',1,'p_comentario','sintatico.py',90),
  ('comentario -> COMMENTS','comentario',1,'p_comentario','sintatico.py',91),
  ('asignacion -> ID ASSIGN expression','asignacion',3,'p_asignacion','sintatico.py',95),
  ('asignacion -> multipleAsignacion expression','asignacion',2,'p_asignacion','sintatico.py',96),
  ('asignacion -> valoresID ASSIGN valoresComa','asignacion',3,'p_asignacion','sintatico.py',97),
  ('asignacion -> ID ASSIGN BOOLEAN','asignacion',3,'p_asignacion','sintatico.py',98),
  ('asignacion -> ID ASSIGN funcion','asignacion',3,'p_asignacion','sintatico.py',99),
  ('multipleAsignacion -> ID ASSIGN','multipleAsignacion',2,'p_multipleAsignacion','sintatico.py',103),
  ('multipleAsignacion -> ID ASSIGN multipleAsignacion','multipleAsignacion',3,'p_multipleAsignacion','sintatico.py',104),
  ('valoresID -> ID','valoresID',1,'p_valoresID','sintatico.py',107),
  ('valoresID -> valoresID COMA ID','valoresID',3,'p_valoresID','sintatico.py',108),
  ('valoresComa -> expression','valoresComa',1,'p_valoresComa','sintatico.py',111),
  ('valoresComa -> valoresComa COMA expression','valoresComa',3,'p_valoresComa','sintatico.py',112),
  ('valoresComa -> valoresComa COMA','valoresComa',2,'p_valoresComa','sintatico.py',113),
  ('valoresDic -> factor DOSPUNTOS factor','valoresDic',3,'p_valoresDic','sintatico.py',117),
  ('valoresDic -> valoresDic COMA factor DOSPUNTOS factor','valoresDic',5,'p_valoresDic','sintatico.py',118),
  ('valoresDic -> valoresDic COMA','valoresDic',2,'p_valoresDic','sintatico.py',119),
  ('diccionario -> LLAVEIZQ valoresDic LLAVEDER','diccionario',3,'p_diccionario','sintatico.py',123),
  ('diccionario -> LLAVEIZQ LLAVEDER','diccionario',2,'p_diccionario','sintatico.py',124),
  ('diccionario -> ID ASSIGN diccionario','diccionario',3,'p_diccionario','sintatico.py',125),
  ('lista -> CORCHETEIZQ valoresComa CORCHETEDER','lista',3,'p_lista','sintatico.py',129),
  ('lista -> ID ASSIGN lista','lista',3,'p_lista','sintatico.py',130),
  ('lista -> ID ASSIGN CORCHETEIZQ CORCHETEDER','lista',4,'p_lista','sintatico.py',131),
  ('tupla -> LPAREN valoresComa RPAREN','tupla',3,'p_tupla','sintatico.py',135),
  ('tupla -> ID ASSIGN tupla','tupla',3,'p_tupla','sintatico.py',136),
  ('conjunto -> LLAVEIZQ valoresComa LLAVEDER','conjunto',3,'p_conjunto','sintatico.py',140),
  ('conjunto -> ID ASSIGN conjunto','conjunto',3,'p_conjunto','sintatico.py',141),
  ('comparacion -> ID operadorLogico expression','comparacion',3,'p_comparacion','sintatico.py',145),
  ('comparacion -> BOOLEAN','comparacion',1,'p_comparacion','sintatico.py',146),
  ('comparacion -> comparacion conectoresLogicos ID','comparacion',3,'p_comparacion','sintatico.py',147),
  ('comparacion -> NOTS BOOLEAN','comparacion',2,'p_comparacion','sintatico.py',148),
  ('comparacion -> expression operadorLogico expression','comparacion',3,'p_comparacion','sintatico.py',149),
  ('comparacion -> comparacion operadorLogico ID','comparacion',3,'p_comparacion','sintatico.py',150),
  ('comparacion -> ID operadorLogico BOOLEAN','comparacion',3,'p_comparacion','sintatico.py',151),
  ('comparacion -> comparacion conectoresLogicos comparacion','comparacion',3,'p_comparacion','sintatico.py',152),
  ('comparacion -> BOOLEAN EQUALS BOOLEAN','comparacion',3,'p_comparacion','sintatico.py',153),
  ('comparacion -> BOOLEAN DIFERENTE BOOLEAN','comparacion',3,'p_comparacion','sintatico.py',154),
  ('operadorLogico -> EQUALS','operadorLogico',1,'p_operadorLogico','sintatico.py',160),
  ('operadorLogico -> MAYORIGUAL','operadorLogico',1,'p_operadorLogico','sintatico.py',161),
  ('operadorLogico -> MENORIGUAL','operadorLogico',1,'p_operadorLogico','sintatico.py',162),
  ('operadorLogico -> LESSTHAN','operadorLogico',1,'p_operadorLogico','sintatico.py',163),
  ('operadorLogico -> MORETHAN','operadorLogico',1,'p_operadorLogico','sintatico.py',164),
  ('operadorLogico -> DIFERENTE','operadorLogico',1,'p_operadorLogico','sintatico.py',165),
  ('conectoresLogicos -> AND','conectoresLogicos',1,'p_conectoresLogicos','sintatico.py',169),
  ('conectoresLogicos -> OR','conectoresLogicos',1,'p_conectoresLogicos','sintatico.py',170),
  ('operacionConectoresLogicos -> NOT ID','operacionConectoresLogicos',2,'p_operacionConectoresLogicos','sintatico.py',173),
  ('operacionConectoresLogicos -> ID conectoresLogicos ID','operacionConectoresLogicos',3,'p_operacionConectoresLogicos','sintatico.py',174),
  ('operacionConectoresLogicos -> operacionConectoresLogicos conectoresLogicos ID','operacionConectoresLogicos',3,'p_operacionConectoresLogicos','sintatico.py',175),
  ('if -> IF LPAREN comparacion RPAREN DOSPUNTOS cuerpoEstructura','if',6,'p_if','sintatico.py',179),
  ('if -> IF comparacion DOSPUNTOS SALTOLINEA cuerpoEstructura else cuerpoEstructura','if',7,'p_if','sintatico.py',180),
  ('if -> IF ID DOSPUNTOS cuerpoEstructura else cuerpoEstructura','if',6,'p_if','sintatico.py',181),
  ('if -> IF LPAREN ID RPAREN DOSPUNTOS cuerpoEstructura','if',6,'p_if','sintatico.py',182),
  ('else -> ELSE DOSPUNTOS','else',2,'p_else','sintatico.py',186),
  ('while -> WHILE LPAREN comparacion RPAREN DOSPUNTOS','while',5,'p_while','sintatico.py',190),
  ('while -> WHILE comparacion DOSPUNTOS','while',3,'p_while','sintatico.py',191),
  ('while -> WHILE ID DOSPUNTOS','while',3,'p_while','sintatico.py',192),
  ('for -> FOR ID IN RANGE LPAREN NUMBER RPAREN DOSPUNTOS','for',8,'p_for','sintatico.py',196),
  ('for -> FOR ID IN ID DOSPUNTOS','for',5,'p_for','sintatico.py',197),
  ('for -> FOR ID IN lista','for',4,'p_for','sintatico.py',198),
  ('for -> FOR ID IN tupla','for',4,'p_for','sintatico.py',199),
  ('for -> FOR ID IN conjunto','for',4,'p_for','sintatico.py',200),
  ('print -> PRINT LPAREN factor RPAREN','print',4,'p_print','sintatico.py',204),
  ('print -> PRINT LPAREN ID RPAREN','print',4,'p_print','sintatico.py',205),
  ('inputF -> ID ASSIGN INPUT LPAREN RPAREN','inputF',5,'p_input','sintatico.py',209),
  ('inputF -> INPUT LPAREN RPAREN','inputF',3,'p_input','sintatico.py',210),
  ('openF -> OPEN LPAREN CADENA RPAREN','openF',4,'p_open','sintatico.py',214),
  ('openF -> OPEN LPAREN CADENA COMA CADENA RPAREN','openF',6,'p_open','sintatico.py',215),
  ('openF -> ID ASSIGN OPEN LPAREN CADENA COMA CADENA RPAREN','openF',8,'p_open','sintatico.py',216),
  ('openF -> ID ASSIGN OPEN LPAREN ID COMA CADENA RPAREN','openF',8,'p_open','sintatico.py',217),
  ('funcion -> DEF ID LPAREN valoresID RPAREN DOSPUNTOS','funcion',6,'p_funcion','sintatico.py',221),
  ('funcion -> DEF ID LPAREN RPAREN DOSPUNTOS','funcion',5,'p_funcion','sintatico.py',222),
  ('funcion -> ID LPAREN RPAREN','funcion',3,'p_funcion','sintatico.py',223),
  ('funcion -> ID LPAREN valoresID RPAREN','funcion',4,'p_funcion','sintatico.py',224),
  ('datos -> lista','datos',1,'p_estructuraDatos','sintatico.py',228),
  ('datos -> tupla','datos',1,'p_estructuraDatos','sintatico.py',229),
  ('datos -> conjunto','datos',1,'p_estructuraDatos','sintatico.py',230),
  ('datos -> diccionario','datos',1,'p_estructuraDatos','sintatico.py',231),
  ('return -> RETURN expression','return',2,'p_return','sintatico.py',234),
  ('return -> RETURN NONE','return',2,'p_return','sintatico.py',235),
  ('append -> ID PUNTO APPEND LPAREN ID RPAREN','append',6,'p_append','sintatico.py',239),
  ('append -> ID PUNTO APPEND LPAREN expression RPAREN','append',6,'p_append','sintatico.py',240),
  ('append -> ID PUNTO APPEND LPAREN datos RPAREN','append',6,'p_append','sintatico.py',241),
  ('remove -> ID PUNTO REMOVE LPAREN ID RPAREN','remove',6,'p_remove','sintatico.py',245),
  ('remove -> ID PUNTO REMOVE LPAREN RPAREN','remove',5,'p_remove','sintatico.py',246),
  ('remove -> ID PUNTO REMOVE LPAREN expression RPAREN','remove',6,'p_remove','sintatico.py',247),
  ('import -> IMPORT ID','import',2,'p_import','sintatico.py',250),
  ('import -> IMPORT ID AS ID','import',4,'p_import','sintatico.py',251),
]
